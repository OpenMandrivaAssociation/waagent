From 84bfbe4b36eb4564a99c705b68f817f668b83546 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20Rosenkr=C3=A4nzer?= <bero@lindev.ch>
Date: Wed, 5 Oct 2022 14:35:02 +0200
Subject: [PATCH] Add OpenMandriva support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Bernhard Rosenkränzer <bero@lindev.ch>
---
 azurelinuxagent/common/osutil/factory.py      |  4 +
 azurelinuxagent/common/osutil/openmandriva.py | 79 +++++++++++++++++++
 setup.py                                      |  6 ++
 3 files changed, 89 insertions(+)
 create mode 100644 azurelinuxagent/common/osutil/openmandriva.py

diff --git a/azurelinuxagent/common/osutil/factory.py b/azurelinuxagent/common/osutil/factory.py
index d48c493477..1b7fa51f84 100644
--- a/azurelinuxagent/common/osutil/factory.py
+++ b/azurelinuxagent/common/osutil/factory.py
@@ -34,6 +34,7 @@
 from .mariner import MarinerOSUtil
 from .nsbsd import NSBSDOSUtil
 from .openbsd import OpenBSDOSUtil
+from .openmandriva import OpenMandrivaOSUtil
 from .openwrt import OpenWRTOSUtil
 from .redhat import RedhatOSUtil, Redhat6xOSUtil, RedhatOSModernUtil
 from .suse import SUSEOSUtil, SUSE11OSUtil
@@ -150,6 +151,9 @@ def _get_osutil(distro_name, distro_code_name, distro_version, distro_full_name)
     if distro_name == "nsbsd":
         return NSBSDOSUtil()
 
+    if distro_name == "openmandriva":
+        return OpenMandrivaOSUtil()
+
     if distro_name == "openwrt":
         return OpenWRTOSUtil()
 
diff --git a/azurelinuxagent/common/osutil/openmandriva.py b/azurelinuxagent/common/osutil/openmandriva.py
new file mode 100644
index 0000000000..f0e96a6dd3
--- /dev/null
+++ b/azurelinuxagent/common/osutil/openmandriva.py
@@ -0,0 +1,79 @@
+# Microsoft Azure Linux Agent
+#
+# Copyright 2022 Bernhard Rosenkränzer <bero@lindev.ch>
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+# Requires Python 2.6+ and OpenSSL 1.0+
+
+import azurelinuxagent.common.utils.shellutil as shellutil
+from azurelinuxagent.common.osutil.default import DefaultOSUtil
+
+class OpenMandrivaOSUtil(DefaultOSUtil):
+    def __init__(self):
+        super(OpenMandrivaOSUtil, self).__init__()
+        self.agent_conf_file_path = '/etc/waagent.conf'
+        self.jit_enabled = True
+
+    @staticmethod
+    def get_systemd_unit_file_install_path():
+        return '/usr/lib/systemd/system'
+
+    @staticmethod
+    def get_agent_bin_path():
+        return '/usr/bin'
+
+    def is_dhcp_enabled(self):
+        return True
+
+    def start_network(self):
+        return shellutil.run("systemctl start NetworkManager", chk_err=False)
+
+    def restart_if(self, ifname=None, retries=None, wait=None):
+        retry_limit = retries+1
+        for attempt in range(1, retry_limit):
+            return_code = shellutil.run("ip link set {0} down && ip link set {0} up".format(ifname))
+            if return_code == 0:
+                return
+            logger.warn("failed to restart {0}: return code {1}".format(ifname, return_code))
+            if attempt < retry_limit:
+                logger.info("retrying to restart {0} in {1} seconds".format(ifname, wait))
+                time.sleep(wait)
+            else:
+                logger.warn("exceeded restart retries for {0}".format(ifname))
+
+    def restart_ssh_service(self):
+        shellutil.run('systemctl restart sshd')
+
+    def stop_dhcp_service(self):
+        # NetworkManager handles DHCP in OpenMandriva.
+        # Stopping it is not usually a good idea.
+        pass
+
+    def start_dhcp_service(self):
+        # NetworkManager handles DHCP in OpenMandriva.
+        # Stopping it is not usually a good idea.
+        pass
+
+    def start_agent_service(self):
+        return shellutil.run("systemctl start {0}".format(self.service_name), chk_err=False)
+
+    def stop_agent_service(self):
+        return shellutil.run("systemctl stop {0}".format(self.service_name), chk_err=False)
+
+    def get_dhcp_pid(self):
+        return self._get_dhcp_pid(["pidof", "NetworkManager"])
+
+    def conf_sshd(self, disable_password):
+        # We prefer the system sshd conf
+        pass
diff --git a/setup.py b/setup.py
index 17d130867e..bbe04503e6 100755
--- a/setup.py
+++ b/setup.py
@@ -155,6 +155,12 @@ def get_data_files(name, version, fullname):  # pylint: disable=R0912
                           src=["init/mariner/waagent.service"])
         set_logrotate_files(data_files)
         set_udev_files(data_files)
+    elif name == 'openmandriva':
+        set_bin_files(data_files, dest=agent_bin_path)
+        set_conf_files(data_files)
+        set_logrotate_files(data_files)
+        set_udev_files(data_files)
+        set_systemd_files(data_files, dest=systemd_dir_path)
     elif name == 'ubuntu':
         set_conf_files(data_files, src=["config/ubuntu/waagent.conf"])
         set_logrotate_files(data_files)
